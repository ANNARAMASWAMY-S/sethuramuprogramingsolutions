Time Complexity Analysis

Let’s analyze:

forecastValue(p, r, n)
Each call reduces years by 1.

It stops when years == 0.

So it performs exactly n recursive calls.

Time Complexity: O(n)
Space Complexity: O(n) (due to recursion stack)


Optimization Strategies

Convert to Iterative (Best for Java)


public static double forecastIterative(double value, double rate, int years) {
    for (int i = 0; i < years; i++) {
        value *= (1 + rate);
    }
    return value;
}
Time: O(n), Space: O(1) — Much better in practice for large n.
